
# Proxy settings and base
  location / {
    try_files $uri $uri/ /index.php?$args;
    # proxy_pass http://server;
    # proxy_set_header Upgrade $http_upgrade;
    # proxy_set_header Connection "Upgrade";
    # proxy_set_header Host            $host;
    # proxy_set_header X-Real-IP       $proxy_protocol_addr;
    # proxy_set_header X-Forwarded-For $proxy_protocol_addr;
    # Very important, controls proxied websocket connection timeout
    # proxy_read_timeout 600s;
  }

# Cache settings for php files
  location ~ [^/]\.php(/|$) {
    fastcgi_cache  microcache;
    fastcgi_cache_key $scheme$host$request_method$request_uri;
    fastcgi_cache_valid 200 304 10m;
    fastcgi_cache_use_stale updating;
    fastcgi_max_temp_file_size 1M;
    # testing different fastcgi_pass;
    fastcgi_pass unix:/var/run/php-fpm/www.sock;
    # fastcgi_pass unix/var/run/php/php-fpm.sock;
    # fastcgi_pass   127.0.0.1:9000;
    fastcgi_index  index.php;
    fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;
    include        fastcgi_params;

    # Local variables to track whether to serve a microcached page or not.
    set $no_cache_set 0;
    set $no_cache_get 0;

    # If a request comes in with a X-Nginx-Cache-Purge: 1 header, do not grab from cache
    # But note that we will still store to cache
    # We use this to proactively update items in the cache!
    if ( $http_x_nginx_cache_purge ) {
      set $no_cache_get 1;
    }

    # If the user has a user logged-in cookie, circumvent the microcache.
    if ( $http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
      set $no_cache_set 1;
      set $no_cache_get 1;
    }

    # fastcgi_no_cache means "Do not store this proxy response in the cache"
    fastcgi_no_cache $no_cache_set;
    # fastcgi_cache_bypass means "Do not look in the cache for this request"
    fastcgi_cache_bypass $no_cache_get;
  }
